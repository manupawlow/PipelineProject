name: .NET

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  source-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Verify source branch
        run: |
          ALLOWED_BRANCHES=("feature" "hotfix" "fix")
          SOURCE_BRANCH=$(echo "${{ github.event.pull_request.head.ref }}" | awk -F'/' '{print $1}')
          if [[ ! " ${ALLOWED_BRANCHES[@]} " =~ " $SOURCE_BRANCH " ]]; then
            echo "Error: Source branch must have one of the allowed prefixes: ${ALLOWED_BRANCHES[*]}"
            exit 1
          fi
  build-and-test:
    needs: source-branch
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: TestProject
    
    env:
      SOLUTION_NAME: TestProject.sln
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    
    - name: Restore dependencies
      run: dotnet restore $SOLUTION_NAME

    - name: Build
      run: dotnet build $SOLUTION_NAME --configuration Release --warnaserror

    - name: Run tests
      run: dotnet test $SOLUTION_NAME --configuration Release
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: 'csharp'
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:csharp"
  
  format:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Dotnet format
      run: |
        dotnet tool install -g dotnet-format
        dotnet format --verify-no-changes || echo "[!] You have format errors. Execute "dotnet format" and commit again" && exit 1

    # If you want to automatic push the format changes use the following
    #- name: Dotnet format + Auto-commit changes
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
    #  run: |
    #    dotnet tool install -g dotnet-format
    #    dotnet format
    #    git config user.name "GitHub Actions"
    #    git config user.email "actions@github.com"
    #    branch_name=$GITHUB_HEAD_REF
    #    git diff --exit-code || gh pr checkout ${{ github.event.pull_request.number }} && git commit -am "[Auto-commit] Fix code formatting issues" && git push
